<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home | Blogifyer</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <style>
        :root {
            --primary-color: #1abc9c;
            --secondary-color: #34495e;
            --success-color: #2ecc71;
            --danger-color: #e74c3c;
            --dark-bg: #181c20;
            --card-bg: #23272b;
            --text-primary: #fff;
            --text-secondary: #b2becd;
            --border-color: #262b2f;
            --hover-bg: #20252a;
        }

        body {
            background: var(--dark-bg);
            color: var(--text-primary);
            font-family: 'Segoe UI', Arial, sans-serif;
            min-height: 100vh;
        }
        
        .blog-card {
            box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.12);
            transition: transform 0.3s ease, box-shadow 0.3s ease, border-color 0.3s ease;
        }

        .blog-card:hover {
            transform: translateY(-5px) scale(1.01);
            box-shadow: 0 12px 30px rgba(26, 188, 156, 0.1);
        }

        .action-btn, .follow-btn, .dots-btn, .share-btn, .close-btn, .comment-action-btn, .modal-button {
            transition: background 0.2s, transform 0.15s ease, color 0.2s, box-shadow 0.2s;
            -webkit-user-select: none;
            user-select: none;
        }

        .action-btn:active, .follow-btn:active, .dots-btn:active, .share-btn:active, .close-btn:active, .comment-action-btn:active, .modal-button:active {
            transform: scale(0.96);
        }

        .action-btn:focus-visible, .follow-btn:focus-visible, .dots-btn:focus-visible, .share-btn:focus-visible, .close-btn:focus-visible, .comment-action-btn:focus-visible, .modal-button:focus-visible {
            outline: 2px solid var(--primary-color);
            outline-offset: 2px;
        }

        .dropdown-menu {
            transition: transform 0.2s ease, opacity 0.2s ease;
        }
    </style>
</head>
<body class="bg-gray-950 text-white min-h-screen">
    <div class="max-w-7xl mx-auto p-4 md:p-8">
        <header class="flex justify-between items-center py-4 md:py-8">
            <h1 class="text-3xl md:text-4xl font-bold text-teal-400">Blogifyer</h1>
        </header>

        <h2 class="text-3xl md:text-4xl font-bold mb-8 text-teal-400 flex items-center gap-2">
            <i class="fas fa-blog"></i> Latest Blogs
        </h2>

        <div id="blog-list" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            <!-- Blog cards will be dynamically inserted here -->
        </div>

    </div>

    <!-- Modals -->
    <div id="modal-overlay" class="fixed inset-0 bg-black bg-opacity-60 z-[80] hidden transition-opacity duration-300"></div>

    <!-- Generic Modal for Likes, Comments, Share -->
    <div id="generic-modal" class="fixed inset-0 flex items-center justify-center p-4 z-[90] hidden">
        <div class="relative w-full max-w-xl max-h-[90vh] bg-gray-800 rounded-3xl p-6 overflow-y-auto transform scale-95 opacity-0 transition-all duration-300">
            <button class="absolute top-4 right-4 text-3xl text-gray-400 hover:text-red-500 transition-colors" onclick="closeModal()">
                &times;
            </button>
            <div id="modal-content" class="pt-2"></div>
        </div>
    </div>
    
    <!-- Custom confirmation modal for delete and other actions -->
    <div id="confirmation-modal" class="fixed inset-0 flex items-center justify-center p-4 z-[90] hidden">
        <div class="relative w-full max-w-sm bg-gray-800 rounded-3xl p-6 text-center transform scale-95 opacity-0 transition-all duration-300">
            <h3 id="confirm-title" class="text-xl font-semibold mb-4 text-teal-400">Are you sure?</h3>
            <p id="confirm-message" class="text-gray-300 mb-6">Do you want to delete this blog?</p>
            <div class="flex justify-center gap-4">
                <button class="px-6 py-2 rounded-lg bg-gray-600 text-white hover:bg-gray-500 transition-colors" onclick="cancelAction()">Cancel</button>
                <button id="confirm-button" class="px-6 py-2 rounded-lg bg-red-600 text-white hover:bg-red-500 transition-colors">Confirm</button>
            </div>
        </div>
    </div>
    
    <script>
        // Mock user and blog data for demonstration
        const user = {
            _id: "user123",
            fullname: "John Doe",
            profileImageURL: "https://placehold.co/100x100/1abc9c/fff?text=JD"
        };
        const blogs = [
            {
                _id: "blog1",
                coverImage: "https://placehold.co/800x400/34495e/fff?text=Blog+Image",
                title: "The Future of Web Development",
                body: "Web development is constantly evolving, with new frameworks and technologies emerging every year. This blog post explores some of the most exciting trends shaping the future of the web.",
                createdBy: {
                    _id: "author456",
                    fullname: "Jane Smith",
                    profileImageURL: "https://placehold.co/100x100/e74c3c/fff?text=JS"
                },
                createdAt: "2023-10-26T10:00:00Z",
                likes: [
                    { _id: "user123", fullname: "John Doe", profileImageURL: "https://placehold.co/100x100/1abc9c/fff?text=JD" },
                    { _id: "user456", fullname: "Emily White", profileImageURL: "https://placehold.co/100x100/2ecc71/fff?text=EW" }
                ],
                comments: [
                    { _id: "comment1", user: { _id: "user123", fullname: "John Doe", profileImageURL: "https://placehold.co/100x100/1abc9c/fff?text=JD" }, content: "Great read!", createdAt: "2023-10-26T11:00:00Z" },
                    { _id: "comment2", user: { _id: "user789", fullname: "Alex Brown", profileImageURL: "https://placehold.co/100x100/3498db/fff?text=AB" }, content: "Very insightful article.", createdAt: "2023-10-26T12:00:00Z" }
                ],
                isOwn: false
            },
            {
                _id: "blog2",
                coverImage: "https://placehold.co/800x400/2ecc71/fff?text=Creative+Coding",
                title: "A Guide to Creative Coding",
                body: "Creative coding is an art form where code is used to create visual and artistic expressions. This guide covers the basics, from setting up your environment to creating your first generative art piece.",
                createdBy: {
                    _id: "user123",
                    fullname: "John Doe",
                    profileImageURL: "https://placehold.co/100x100/1abc9c/fff?text=JD"
                },
                createdAt: "2023-10-25T15:30:00Z",
                likes: [
                    { _id: "user456", fullname: "Emily White", profileImageURL: "https://placehold.co/100x100/2ecc71/fff?text=EW" }
                ],
                comments: [],
                isOwn: true
            }
        ];

        // --- Generic Modal Controls ---
        const modalOverlay = document.getElementById('modal-overlay');
        const genericModal = document.getElementById('generic-modal');
        const confirmModal = document.getElementById('confirmation-modal');
        let currentActionCallback = null;
        let currentBlogUrl = '';

        function showModal(modalElement) {
            modalElement.classList.remove('hidden');
            modalOverlay.classList.remove('hidden');
            setTimeout(() => {
                modalElement.querySelector('div').classList.remove('scale-95', 'opacity-0');
            }, 10);
        }

        function hideModal(modalElement) {
            modalElement.querySelector('div').classList.add('scale-95', 'opacity-0');
            setTimeout(() => {
                modalElement.classList.add('hidden');
                modalOverlay.classList.add('hidden');
            }, 300);
        }

        window.closeModal = function() {
            hideModal(genericModal);
        }
        
        modalOverlay.addEventListener('click', () => {
            if (!genericModal.classList.contains('hidden')) {
                closeModal();
            }
            if (!confirmModal.classList.contains('hidden')) {
                hideModal(confirmModal);
            }
        });

        function showConfirmation(title, message, callback) {
            document.getElementById('confirm-title').textContent = title;
            document.getElementById('confirm-message').textContent = message;
            currentActionCallback = callback;
            document.getElementById('confirm-button').onclick = () => {
                if (currentActionCallback) {
                    currentActionCallback();
                    currentActionCallback = null;
                }
                hideModal(confirmModal);
            };
            showModal(confirmModal);
        }

        window.cancelAction = function() {
            hideModal(confirmModal);
        }

        // --- Blog & Action Rendering ---
        const blogListElement = document.getElementById('blog-list');

        function renderBlogs() {
            if (blogs.length === 0) {
                blogListElement.innerHTML = `<div class="text-gray-400 text-lg md:col-span-3 text-center">
                    No blogs found. Be the first to <a href="#" class="text-teal-400 hover:underline">create a blog</a>!
                </div>`;
                return;
            }

            blogListElement.innerHTML = blogs.map(blog => {
                const isLiked = blog.likes.some(like => like._id === user._id);
                const isOwn = blog.isOwn;

                const dropdownMenu = `
                    <div class="absolute top-4 right-4">
                        <button class="dots-btn text-2xl text-gray-400 hover:text-teal-400" onclick="toggleMenu(event, '${blog._id}')">
                            <i class="fas fa-ellipsis-v"></i>
                        </button>
                        <div id="menu-${blog._id}" class="dropdown-menu absolute top-full right-0 mt-2 bg-gray-800 border border-gray-700 rounded-lg shadow-lg hidden opacity-0 transform translate-y-2 transition-all duration-200 min-w-[160px] p-2 z-10">
                            ${isOwn ? `
                                <button class="w-full text-left py-2 px-4 rounded-md text-red-500 hover:bg-gray-700 transition-colors" onclick="handleDelete('${blog._id}')">
                                    <i class="fas fa-trash"></i> Delete blog
                                </button>
                            ` : `
                                <button class="w-full text-left py-2 px-4 rounded-md text-teal-400 hover:bg-gray-700 transition-colors" onclick="handleShare('${blog._id}')">
                                    <i class="fas fa-share"></i> Share blog
                                </button>
                            `}
                        </div>
                    </div>
                `;

                return `
                    <div class="relative blog-card bg-gray-800 rounded-2xl p-6 border-2 border-gray-700 flex flex-col">
                        ${blog.coverImage ? `<img src="${blog.coverImage}" alt="Cover Image" class="rounded-lg max-h-[270px] w-full object-cover mb-4 border border-gray-700">` : ''}
                        <div class="flex items-center gap-4 mb-3">
                            <img src="${blog.createdBy.profileImageURL}" alt="Profile Image" class="w-12 h-12 rounded-full object-cover border-2 border-teal-400">
                            <div>
                                <a href="#" class="text-teal-400 font-semibold hover:underline">${blog.createdBy.fullname}</a>
                                <div class="text-sm text-gray-400 flex items-center gap-1">
                                    <i class="fas fa-clock"></i> <span>${moment(blog.createdAt).fromNow()}</span>
                                </div>
                            </div>
                        </div>
                        <h3 class="text-2xl font-semibold mb-2 text-white">
                            <a href="#" class="hover:text-teal-400 transition-colors">${blog.title}</a>
                        </h3>
                        <p class="text-gray-300 mb-4 flex-1">
                            ${blog.body.length > 220 ? blog.body.substring(0, 220) + "..." : blog.body}
                            <a href="#" class="text-teal-400 hover:underline">Read more</a>
                        </p>
                        <div class="flex flex-wrap gap-3 mt-auto items-center">
                            <button class="flex items-center gap-2 py-2 px-4 rounded-lg text-white transition-colors
                                ${isLiked ? 'bg-red-500 hover:bg-red-600' : 'bg-teal-500 hover:bg-teal-600'}" 
                                onclick="handleLike('${blog._id}')">
                                <i class="fas ${isLiked ? 'fa-heart' : 'fa-heart-broken'}"></i>
                                <span>${isLiked ? 'Unlike' : 'Like'}</span>
                            </button>
                            <button class="flex items-center gap-2 py-2 px-4 rounded-lg bg-gray-700 text-gray-300 hover:bg-teal-400 hover:text-white transition-colors" onclick="showLikes('${blog._id}')">
                                <i class="fas fa-thumbs-up"></i>
                                <span>${blog.likes.length} Likes</span>
                            </button>
                            <button class="flex items-center gap-2 py-2 px-4 rounded-lg bg-gray-700 text-gray-300 hover:bg-teal-400 hover:text-white transition-colors" onclick="showComments('${blog._id}')">
                                <i class="fas fa-comment"></i>
                                <span>${blog.comments.length} Comments</span>
                            </button>
                            <a href="#" class="flex items-center gap-2 py-2 px-4 rounded-lg bg-gray-600 text-white hover:bg-gray-500 transition-colors">
                                <i class="fas fa-arrow-right"></i> Read Blog
                            </a>
                        </div>
                        ${dropdownMenu}
                    </div>
                `;
            }).join('');
        }

        // --- Event Handlers & API Simulation ---
        window.handleLike = (blogId) => {
            console.log(`Simulating like/unlike for blog ID: ${blogId}`);
            // In a real app, you would send a POST request to your API
        };

        window.handleDelete = (blogId) => {
            showConfirmation(
                "Confirm Deletion",
                "Are you sure you want to permanently delete this blog?",
                () => {
                    console.log(`Simulating deletion of blog ID: ${blogId}`);
                    // In a real app, you would send a DELETE request
                }
            );
        };
        
        window.handleShare = (blogId) => {
            const blog = blogs.find(b => b._id === blogId);
            if (!blog) return;
            currentBlogUrl = `http://yourapp.com/blog/${blogId}`; // Replace with actual URL logic
            
            const content = `
                <h3 class="text-xl font-semibold mb-4 text-teal-400"><i class="fas fa-share"></i> Share Blog</h3>
                <div class="flex flex-col gap-2">
                    <button class="flex items-center gap-2 py-2 px-4 rounded-lg bg-gray-700 text-white hover:bg-gray-600 transition-colors share-button" onclick="copyLink()">
                        <i class="fas fa-copy"></i> Copy Link
                    </button>
                </div>
            `;
            document.getElementById('modal-content').innerHTML = content;
            showModal(genericModal);
        }

        window.copyLink = () => {
            const tempInput = document.createElement('input');
            tempInput.value = currentBlogUrl;
            document.body.appendChild(tempInput);
            tempInput.select();
            document.execCommand('copy');
            document.body.removeChild(tempInput);
            
            // You can add a visual cue here instead of an alert
            console.log('Link copied to clipboard!');
            closeModal();
        }

        window.showLikes = (blogId) => {
            const blog = blogs.find(b => b._id === blogId);
            if (!blog) return;
            
            const content = `
                <h3 class="text-xl font-semibold mb-4 text-teal-400"><i class="fas fa-heart"></i> Likes</h3>
                ${blog.likes.length > 0 ?
                    blog.likes.map(like => `
                        <div class="flex items-center gap-4 p-4 bg-gray-700 rounded-lg mb-3">
                            <img src="${like.profileImageURL}" alt="${like.fullname}'s profile picture" class="w-10 h-10 rounded-full object-cover">
                            <div class="text-white font-semibold"><a href="#" class="hover:underline">${like.fullname}</a></div>
                        </div>
                    `).join('')
                    : `<p class="text-center text-gray-400">No one has liked this blog yet.</p>`
                }
            `;
            document.getElementById('modal-content').innerHTML = content;
            showModal(genericModal);
        };

        window.showComments = (blogId) => {
            const blog = blogs.find(b => b._id === blogId);
            if (!blog) return;
            
            const content = `
                <h3 class="text-xl font-semibold mb-4 text-teal-400"><i class="fas fa-comments"></i> Comments</h3>
                ${blog.comments.length > 0 ?
                    blog.comments.map(comment => `
                        <div class="flex items-start gap-4 p-4 bg-gray-700 rounded-lg mb-3">
                            <img src="${comment.user.profileImageURL}" alt="${comment.user.fullname}'s profile picture" class="w-10 h-10 rounded-full object-cover">
                            <div class="flex-1">
                                <div class="text-teal-400 font-semibold mb-1"><a href="#" class="hover:underline">${comment.user.fullname}</a></div>
                                <div class="text-gray-300 text-sm">${comment.content}</div>
                                <div class="text-gray-400 text-xs mt-1 flex items-center gap-1">
                                    <i class="fas fa-clock"></i> ${moment(comment.createdAt).fromNow()}
                                </div>
                            </div>
                        </div>
                    `).join('')
                    : `<p class="text-center text-gray-400">No comments yet. Be the first to comment!</p>`
                }
            `;
            document.getElementById('modal-content').innerHTML = content;
            showModal(genericModal);
        };

        // --- Dropdown Menu Logic ---
        window.toggleMenu = (event, blogId) => {
            event.stopPropagation();
            const menu = document.getElementById(`menu-${blogId}`);
            const isAlreadyActive = menu.classList.contains('active');
            
            // Close all other open menus
            document.querySelectorAll('.dropdown-menu.active').forEach(openMenu => {
                openMenu.classList.remove('active');
                openMenu.classList.add('hidden', 'opacity-0', 'translate-y-2');
            });
            
            // Toggle the clicked menu
            if (!isAlreadyActive) {
                menu.classList.add('active');
                menu.classList.remove('hidden', 'opacity-0', 'translate-y-2');
            }
        };

        window.addEventListener('click', (event) => {
            if (!event.target.closest('.blog-menu')) {
                document.querySelectorAll('.dropdown-menu.active').forEach(menu => {
                    menu.classList.remove('active');
                    menu.classList.add('hidden', 'opacity-0', 'translate-y-2');
                });
            }
        });

        // --- Initial render ---
        document.addEventListener('DOMContentLoaded', renderBlogs);

    </script>
</body>
</html>

