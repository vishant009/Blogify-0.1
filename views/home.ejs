<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Home | Blogifyer</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
  <style>
    :root {
      --primary-color: #1abc9c;
      --secondary-color: #34495e;
      --success-color: #2ecc71;
      --danger-color: #e74c3c;
      --dark-bg: #181c20;
      --card-bg: #23272b;
      --text-primary: #fff;
      --text-secondary: #b2becd;
      --border-color: #262b2f;
      --hover-bg: #20252a;
      --shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.12);
    }
    body {
      background: var(--dark-bg);
      color: var(--text-primary);
      margin: 0;
      font-family: 'Segoe UI', Arial, sans-serif;
      min-height: 100vh;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
    body.modal-open {
      overflow: hidden;
    }
    .main-container {
      max-width: 1120px;
      margin: 0 auto;
      padding: 4.5rem 1rem 2rem;
    }
    h1 {
      font-size: 2.4rem;
      margin-bottom: 1.5rem;
      color: var(--primary-color);
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .alert {
      padding: 1rem; border-radius: 7px; margin-bottom: 1rem;
      font-size: 1rem; display: flex; align-items: center; gap: 0.5rem;
    }
    .alert-success { background: rgba(46, 204, 113, 0.1); color: var(--success-color); }
    .alert-error { background: rgba(231,76,60,0.1); color: var(--danger-color); }
    .blogs-list {
      display: grid; grid-template-columns: repeat(1, minmax(350px, 1fr)); gap: 2rem;
    }
    .blog-card {
      background: var(--card-bg); border-radius: 1.2rem; box-shadow: var(--shadow);
      padding: 2rem 1.5rem 1.5rem; display: flex; flex-direction: column;
      margin-bottom: 2rem; border: 1.5px solid var(--border-color);
      position: relative;
      transition: transform 0.3s ease, box-shadow 0.3s ease, border-color 0.3s ease;
      will-change: transform, box-shadow;
    }
    .blog-card:hover {
      transform: translateY(-5px) scale(1.01);
      box-shadow: 0 12px 30px rgba(26, 188, 156, 0.1);
      border-color: var(--primary-color);
    }
    .blog-cover {
      border-radius: 9px; max-height: 270px; width: 100%; object-fit: cover;
      margin-bottom: 1.2rem; border: 1px solid var(--border-color); background: #191919;
    }
    .author-section { display: flex; align-items: center; gap: 1rem; margin-bottom: 0.6rem; }
    .author-img {
      width: 43px; height: 43px; border-radius: 50%; object-fit: cover;
      border: 2px solid var(--primary-color); background: #0d0f12;
    }
    .author-details a {
      color: var(--primary-color); font-weight: 600; text-decoration: none; transition: color 0.2s;
    }
    .author-details a:hover { color: #16a085; text-decoration: underline; }
    .blog-title a { color: var(--primary-color); text-decoration: none; transition: color 0.2s; }
    .blog-title a:hover { color: #16a085; }
    .blog-excerpt a { color: var(--primary-color); text-decoration: none; transition: text-decoration 0.2s; }
    .blog-excerpt a:hover { text-decoration: underline; }
    .action-btn, .follow-btn, .dots-btn, .share-btn, .close-btn, .comment-action-btn {
      -webkit-user-select: none; user-select: none;
      transition: background 0.2s, transform 0.15s ease, color 0.2s, box-shadow 0.2s;
    }
    .action-btn:active, .follow-btn:active, .dots-btn:active, .share-btn:active, .close-btn:active, .comment-action-btn:active {
      transform: scale(0.96);
    }
    .action-btn:focus-visible, .follow-btn:focus-visible, .dots-btn:focus-visible, .share-btn:focus-visible, .close-btn:focus-visible, .comment-action-btn:focus-visible {
      outline: 2px solid var(--primary-color); outline-offset: 2px;
    }
    .blog-actions {
      display: flex; flex-wrap: wrap; gap: 0.7rem; margin-top: 0.5rem; align-items: center;
    }
    .action-btn, .follow-btn {
      border: none; outline: none; border-radius: 6px; padding: 0.47rem 1.13rem; font-size: 1rem;
      cursor: pointer; color: var(--text-primary); background: var(--primary-color);
      display: flex; align-items: center; gap: 0.4rem;
    }
    .action-btn.liked { background: var(--danger-color); }
    .action-btn:hover { background: #16a085; transform: scale(1.05); }
    .follow-btn { background: var(--success-color); }
    .follow-btn.following { background: var(--danger-color); }
    .follow-btn:hover { background: #219653; transform: scale(1.05); }
    .follow-btn.following:hover { background: #c0392b; }
    .blog-menu { position: absolute; top: 10px; right: 10px; z-index: 10; }
    .dots-btn {
      background: none; border: none; color: var(--text-secondary);
      font-size: 1.5rem; cursor: pointer; padding: 0.2rem 0.5rem;
    }
    .dots-btn:hover { color: var(--primary-color); }
    .dropdown-menu {
      display: none; position: absolute; top: 30px; right: 0;
      background: var(--card-bg); border: 1px solid var(--border-color);
      border-radius: 0.5rem; box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      z-index: 1000; min-width: 160px; padding: 0.5rem 0;
      transform: translateY(10px); opacity: 0;
      transition: transform 0.2s ease, opacity 0.2s ease;
      will-change: transform, opacity;
    }
    .dropdown-menu.active { display: block; transform: translateY(0); opacity: 1; }
    .dropdown-menu button, .dropdown-menu a {
      display: block; width: 100%; padding: 0.6rem 1rem;
      background: none; border: none; color: var(--text-primary);
      text-align: left; cursor: pointer; transition: background 0.2s; text-decoration: none;
    }
    .dropdown-menu button:hover, .dropdown-menu a:hover { background: var(--hover-bg); }
    .dropdown-menu .delete-btn { color: var(--danger-color); }
    #modalOverlay {
      position: fixed; inset: 0; background: rgba(0,0,0,0.6); z-index: 8000;
      opacity: 0; transition: opacity 0.3s ease-in-out; pointer-events: none;
    }
    #modalOverlay.active { opacity: 1; pointer-events: auto; }
    .modal {
      display: none; position: fixed; top: 50%; left: 50%; width: 90vw; max-width: 500px;
      height: auto; max-height: 80vh; overflow-y: auto; background: var(--card-bg); z-index: 9000;
      box-shadow: 0 8px 32px rgba(0,0,0,0.25); border-radius: 1.1rem; padding: 2.2rem 1.7rem 1.5rem;
      transform: translate(-50%, -45%); opacity: 0;
      transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.3s ease;
      will-change: transform, opacity;
    }
    .modal.active { display: block; transform: translate(-50%, -50%); opacity: 1; }
    .close-btn {
      position: absolute; right: 18px; top: 13px; font-size: 2rem; background: none; border: none;
      color: var(--text-primary); cursor: pointer;
    }
    .close-btn:hover { color: var(--danger-color); }
    .modal h3 {
      margin-top: 0; color: var(--primary-color); margin-bottom: 1.2rem; font-size: 1.3rem; letter-spacing: 1px;
    }
    .comment-block, .like-block {
      display: flex; align-items: flex-start; gap: 1.1rem; margin-bottom: 1.2rem;
      background: var(--hover-bg); border-radius: 8px; padding: 1rem 1.1rem;
    }
    .comment-block img, .like-block img {
      width: 42px; height: 42px; border-radius: 50%; object-fit: cover; background: #111;
    }
    .comment-content, .like-content { flex: 1; min-width: 0; }
    .like-content { display: flex; justify-content: space-between; align-items: center; width: 100%; }
    .comment-author, .like-author { font-weight: bold; color: var(--primary-color); margin-bottom: 0.2rem; }
    .like-author a { color: inherit; text-decoration: none; }
    .like-author a:hover { text-decoration: underline; }
    .comment-text { color: var(--text-secondary); margin-bottom: 0.3rem; word-break: break-word; }
    .comment-time { font-size: 0.85rem; color: var(--text-secondary); display: flex; align-items: center; gap: 0.3rem; }
    .likes-preview, .comments-preview {
      padding: 0.47rem 1.13rem; border-radius: 6px; background: var(--hover-bg); cursor: pointer;
      display: flex; align-items: center; gap: 0.4rem; color: var(--text-secondary); font-size: 0.95rem;
      transition: background 0.2s, transform 0.2s, color 0.2s;
    }
    .likes-preview:hover, .comments-preview:hover { background: var(--primary-color); color: var(--text-primary); transform: scale(1.05); }
    .comment-actions { display: flex; gap: 0.75rem; margin-top: 0.5rem; align-items: center; }
    .comment-action-btn {
      background: none; border: none; color: var(--text-secondary); font-size: 0.9rem;
      cursor: pointer; display: flex; align-items: center; gap: 0.3rem; padding: 0;
    }
    .comment-action-btn.liked { color: var(--danger-color); }
    #shareModal { width: 320px; }
    .share-options { display: flex; flex-direction: column; gap: 0.5rem; }
    .share-btn {
      padding: 0.75rem; background: var(--hover-bg); color: var(--text-primary); border: none;
      border-radius: 0.5rem; cursor: pointer; display: flex; align-items: center; gap: 0.5rem;
    }
    .share-btn:hover { background: var(--primary-color); }
    @media (max-width: 600px) {
      .modal { width: 95vw; padding: 1.5rem 1rem 1rem; }
    }
  </style>
</head>
<body>
  <%- include('partials/header', { user }) %>
  <div class="main-container">
    <h1><i class="fas fa-blog"></i> Latest Blogs</h1>
    <% if (success_msg) { %> <div class="alert alert-success"><i class="fas fa-check-circle"></i> <%= success_msg %></div> <% } %>
    <% if (error_msg) { %> <div class="alert alert-error"><i class="fas fa-exclamation-circle"></i> <%= error_msg %></div> <% } %>
    <div class="blogs-list">
      <% if (blogs.length === 0) { %>
        <div style="color:#b2becd;font-size:1.12rem;">No blogs found. Be the first to <a href="/blog/addBlog" style="color:var(--primary-color);text-decoration:underline;">create a blog</a>!</div>
      <% } %>
      <% blogs.forEach(blog => { %>
        <div class="blog-card" data-blog-id="<%= blog._id %>">
          <% if (blog.coverImage) { %> <img src="<%= blog.coverImage %>" alt="Cover Image" class="blog-cover"> <% } %>
          <div class="author-section">
            <img src="<%= blog.createdBy.profileImageURL %>" alt="Profile Image" class="author-img">
            <div class="author-details">
              <a href="/profile/<%= blog.createdBy._id %>"><%= blog.createdBy.fullname %></a>
              <span style="color:var(--text-secondary);font-size:0.95rem;"><i class="fas fa-clock"></i> <%= moment(blog.createdAt).fromNow() %></span>
            </div>
          </div>
          <div class="blog-title"><a href="/blog/<%= blog._id %>"><%= blog.title %></a></div>
          <div class="blog-meta">
            <span><i class="fas fa-heart"></i> <%= blog.likes.length %> Likes</span>
            <span><i class="fas fa-comments"></i> <%= blog.totalComments %> Comments</span>
          </div>
          <div class="blog-excerpt">
            <%= blog.body.length > 220 ? blog.body.substring(0, 220) + "..." : blog.body %>
            <a href="/blog/<%= blog._id %>">Read more</a>
          </div>
          <div class="blog-actions">
            <% if (user) { %>
              <form action="/blog/<%= blog._id %>/like" method="POST" style="display:inline;"><button class="action-btn <%= blog.likes.some(like => like._id.toString() === user._id.toString()) ? 'liked' : '' %>" type="submit"><i class="fas <%= blog.likes.some(like => like._id.toString() === user._id.toString()) ? 'fa-heart' : 'fa-heart-broken' %>"></i> <%= blog.likes.some(like => like._id.toString() === user._id.toString()) ? 'Unlike' : 'Like' %></button></form>
            <% } %>
            <button class="likes-preview" onclick="showLikes('<%= blog._id %>')"><i class="fas fa-thumbs-up"></i> View Likes</button>
            <button class="comments-preview" onclick="showComments('<%= blog._id %>')"><i class="fas fa-comment"></i> View Comments</button>
            <a href="/blog/<%= blog._id %>" class="action-btn" style="background:var(--secondary-color);"><i class="fas fa-arrow-right"></i> Read Blog</a>
          </div>
          <div class="blog-menu">
            <button class="dots-btn" onclick="toggleMenu(event, '<%= blog._id %>')"><i class="fas fa-ellipsis-v"></i></button>
            <div class="dropdown-menu" id="menu-<%= blog._id %>">
              <% if (blog.isOwn) { %>
                <form action="/blog/<%= blog._id %>?_method=DELETE" method="POST" style="margin:0;" onsubmit="return confirm('Are you sure you want to delete this blog?');"><button type="submit" class="delete-btn"><i class="fas fa-trash"></i> Delete blog</button></form>
              <% } else { %>
                <button onclick="openShare('<%= blog._id %>')"><i class="fas fa-share"></i> Share blog</button>
              <% } %>
            </div>
          </div>
          <div id="likesModal-<%= blog._id %>" class="modal"></div>
          <div id="commentsModal-<%= blog._id %>" class="modal"></div>
        </div>
      <% }) %>
    </div>
  </div>

  <div id="modalOverlay"></div>
  <div id="shareModal" class="modal">
    <button class="close-btn" onclick="closeModal()">&times;</button>
    <h3><i class="fas fa-share"></i> Share Blog</h3>
    <div class="share-options">
      <button class="share-btn" onclick="copyLink()"><i class="fas fa-copy"></i> Copy Link</button>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const modalOverlay = document.getElementById('modalOverlay');
      let currentBlogUrl = '';

      // --- Generic Modal Controls ---
      function openModal(modal) {
        if (modal) {
          modalOverlay.classList.add('active');
          modal.classList.add('active');
          document.body.classList.add('modal-open');
        }
      }

      window.closeModal = function() {
        modalOverlay.classList.remove('active');
        document.querySelectorAll('.modal.active').forEach(modal => {
          modal.classList.remove('active');
        });
        document.body.classList.remove('modal-open');
      }
      
      modalOverlay.addEventListener('click', closeModal);

      // --- Specific Modal Triggers & Data Fetching ---
      window.showLikes = async (blogId) => {
        const modal = document.getElementById('likesModal-' + blogId);
        if (!modal) return;
        
        try {
          // Replace with your actual API endpoint to fetch likes for a blog post
          const response = await fetch(`/api/blog/${blogId}/likes`);
          if (!response.ok) throw new Error('Failed to fetch likes');
          const likes = await response.json();
          
          let likesHtml = '<h3><i class="fas fa-heart"></i> Likes</h3>';
          if (likes.length > 0) {
            likesHtml += likes.map(like => `
              <div class="like-block">
                <img src="${like.profileImageURL}" alt="${like.fullname}'s profile picture" />
                <div class="like-content">
                  <div class="like-author"><a href="/profile/${like._id}">${like.fullname}</a></div>
                </div>
              </div>
            `).join('');
          } else {
            likesHtml += '<p style="text-align:center; color:var(--text-secondary);">No one has liked this blog yet.</p>';
          }
          
          modal.innerHTML = `<button class="close-btn" onclick="closeModal()">&times;</button>${likesHtml}`;
          openModal(modal);
        } catch (error) {
          console.error('Error fetching likes:', error);
          alert('Failed to load likes. Please try again.');
        }
      };

      window.showComments = async (blogId) => {
        const modal = document.getElementById('commentsModal-' + blogId);
        if (!modal) return;

        try {
          // Replace with your actual API endpoint to fetch comments for a blog post
          const response = await fetch(`/api/blog/${blogId}/comments`);
          if (!response.ok) throw new Error('Failed to fetch comments');
          const comments = await response.json();

          let commentsHtml = '<h3><i class="fas fa-comments"></i> Comments</h3>';
          if (comments.length > 0) {
            commentsHtml += comments.map(comment => `
              <div class="comment-block">
                <img src="${comment.user.profileImageURL}" alt="${comment.user.fullname}'s profile picture" />
                <div class="comment-content">
                  <div class="comment-author"><a href="/profile/${comment.user._id}">${comment.user.fullname}</a></div>
                  <div class="comment-text">${comment.content}</div>
                  <div class="comment-time"><i class="fas fa-clock"></i> ${moment(comment.createdAt).fromNow()}</div>
                </div>
              </div>
            `).join('');
          } else {
            commentsHtml += '<p style="text-align:center; color:var(--text-secondary);">No comments yet. Be the first to comment!</p>';
          }

          modal.innerHTML = `<button class="close-btn" onclick="closeModal()">&times;</button>${commentsHtml}`;
          openModal(modal);
        } catch (error) {
          console.error('Error fetching comments:', error);
          alert('Failed to load comments. Please try again.');
        }
      };
      
      window.openShare = (blogId) => {
        currentBlogUrl = `${window.location.origin}/blog/${blogId}`;
        openModal(document.getElementById('shareModal'));
      }

      window.copyLink = () => {
        navigator.clipboard.writeText(currentBlogUrl).then(() => {
          alert('Link copied to clipboard!');
        }).catch(() => {
          alert('Failed to copy link.');
        });
      }

      // --- Dropdown Menu Toggle ---
      window.toggleMenu = (event, blogId) => {
        event.stopPropagation();
        const menu = document.getElementById('menu-' + blogId);
        const isAlreadyActive = menu.classList.contains('active');
        
        document.querySelectorAll('.dropdown-menu.active').forEach(openMenu => {
          openMenu.classList.remove('active');
        });

        if (!isAlreadyActive) {
          menu.classList.add('active');
        }
      }

      window.addEventListener('click', (event) => {
        if (!event.target.closest('.blog-menu')) {
          document.querySelectorAll('.dropdown-menu.active').forEach(menu => {
            menu.classList.remove('active');
          });
        }
      });
    });
  </script>
</body>
</html>
