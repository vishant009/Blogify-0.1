<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Search | Blogify</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <style>
    :root {
      --primary-color: #1abc9c;
      --secondary-color: #34495e;
      --success-color: #2ecc71;
      --danger-color: #e74c3c;
      --dark-bg: #181c20;
      --card-bg: #23272b;
      --text-primary: #fff;
      --text-secondary: #b2becd;
      --border-color: #262b2f;
      --hover-bg: #20252a;
      --shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.12);
    }
    body {
      background: var(--dark-bg);
      color: var(--text-primary);
      margin: 0;
      font-family: 'Segoe UI', Arial, sans-serif;
      min-height: 100vh;
    }
    .main-container {
      max-width: 1120px;
      margin: 0 auto;
      padding: 4.5rem 1rem 2rem;
    }
    h1 {
      font-size: 2.4rem;
      margin-bottom: 1.5rem;
      color: var(--primary-color);
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .alert {
      padding: 1rem;
      border-radius: 7px;
      margin-bottom: 1rem;
      font-size: 1rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .alert-success {
      background: rgba(46, 204, 113, 0.1);
      color: var(--success-color);
    }
    .alert-error {
      background: rgba(231,76,60,0.1);
      color: var(--danger-color);
    }
    .section-title {
      font-size: 1.8rem;
      margin-bottom: 1.5rem;
      color: var(--primary-color);
    }
    .users-list, .blogs-list {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 2rem;
    }
    .user-card, .blog-card {
      background: var(--card-bg);
      border-radius: 1.2rem;
      box-shadow: var(--shadow);
      padding: 1.5rem;
      display: flex;
      flex-direction: column;
      border: 1.5px solid var(--border-color);
      position: relative;
      transition: transform 0.2s, box-shadow 0.2s;
    }
    .user-card:hover, .blog-card:hover {
      transform: translateY(-3px) scale(1.01);
      box-shadow: 0 12px 30px rgba(26, 188, 156, 0.08);
      border-color: var(--primary-color);
    }
    .user-info {
      display: flex;
      align-items: center;
      gap: 1rem;
      margin-bottom: 1rem;
    }
    .user-img {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      object-fit: cover;
      border: 2px solid var(--primary-color);
      background: #0d0f12;
    }
    .user-details h3 {
      margin: 0;
      font-size: 1.2rem;
      color: var(--primary-color);
    }
    .user-details p {
      margin: 0;
      font-size: 0.9rem;
      color: var(--text-secondary);
    }
    .user-actions {
      display: flex;
      justify-content: flex-end;
    }
    .follow-btn {
      border: none;
      outline: none;
      border-radius: 6px;
      padding: 0.47rem 1.13rem;
      font-size: 1rem;
      cursor: pointer;
      color: var(--text-primary);
      background: var(--success-color);
      display: flex;
      align-items: center;
      gap: 0.4rem;
      transition: background 0.2s, transform 0.2s;
    }
    .follow-btn.following {
      background: var(--danger-color);
    }
    .follow-btn.requested {
      background: #bdc3c7;
      cursor: not-allowed;
    }
    .follow-btn.cancel {
      background: var(--danger-color);
    }
    .follow-btn:hover {
      background: #219653;
      transform: scale(1.05);
    }
    .follow-btn.following:hover {
      background: #c0392b;
    }
    .follow-btn.cancel:hover {
      background: #c0392b;
    }
    .blog-cover {
      border-radius: 9px;
      max-height: 270px;
      width: 100%;
      object-fit: cover;
      margin-bottom: 1.2rem;
      border: 1px solid var(--border-color);
      background: #191919;
    }
    .author-section {
      display: flex;
      align-items: center;
      gap: 1rem;
      margin-bottom: 0.6rem;
    }
    .author-img {
      width: 43px;
      height: 43px;
      border-radius: 50%;
      object-fit: cover;
      border: 2px solid var(--primary-color);
      background: #0d0f12;
    }
    .author-details {
      display: flex;
      flex-direction: column;
    }
    .author-details a {
      color: var(--primary-color);
      font-weight: 600;
      text-decoration: none;
    }
    .author-details a:hover {
      text-decoration: underline;
    }
    .blog-title {
      font-size: 1.45rem;
      font-weight: bold;
      margin-bottom: 0.3rem;
      line-height: 1.2;
      color: var(--primary-color);
    }
    .blog-title a {
      color: inherit;
      text-decoration: none;
      transition: color 0.2s;
    }
    .blog-title a:hover {
      color: #16a085;
    }
    .blog-meta {
      color: var(--text-secondary);
      font-size: 0.91rem;
      margin-bottom: 1rem;
      display: flex;
      gap: 1rem;
      align-items: center;
    }
    .blog-excerpt {
      color: var(--text-secondary);
      font-size: 1.05rem;
      margin-bottom: 1.2rem;
      line-height: 1.7;
    }
    .blog-excerpt a {
      color: var(--primary-color);
      text-decoration: none;
    }
    .blog-excerpt a:hover {
      text-decoration: underline;
    }
    .blog-actions {
      display: flex;
      flex-wrap: wrap;
      gap: 0.7rem;
      margin-top: 0.5rem;
      align-items: center;
    }
    .action-btn, .follow-btn, .comments-btn, .likes-btn {
      border: none;
      outline: none;
      border-radius: 6px;
      padding: 0.47rem 1.13rem;
      font-size: 1rem;
      cursor: pointer;
      color: var(--text-primary);
      background: var(--primary-color);
      display: flex;
      align-items: center;
      gap: 0.4rem;
      transition: background 0.2s, transform 0.2s;
    }
    .action-btn.liked {
      background: var(--danger-color);
    }
    .action-btn:hover,
    .comments-btn:hover,
    .likes-btn:hover {
      background: #16a085;
      transform: scale(1.05);
    }
    /* Modals Styles (abridged for comments/likes if needed) */
    .likes-preview, .comments-preview {
      padding: 0.47rem 1.13rem;
      border-radius: 6px;
      background: var(--hover-bg);
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 0.4rem;
      color: var(--text-secondary);
      font-size: 0.95rem;
      transition: background 0.2s, transform 0.2s;
    }
    .likes-preview:hover, .comments-preview:hover {
      background: var(--primary-color);
      color: var(--text-primary);
      transform: scale(1.05);
    }
    .likes-preview a, .comments-preview a {
      color: inherit;
      text-decoration: none;
      display: flex;
      align-items: center;
      gap: 0.3rem;
    }
    .likes-preview a:hover, .comments-preview a:hover {
      text-decoration: underline;
    }
    @media (max-width: 900px) {
      .main-container {
        padding: 3.5rem 0.5rem 1.2rem;
      }
      .users-list, .blogs-list {
        gap: 1.2rem;
      }
    }
    @media (max-width: 600px) {
      .main-container {
        padding-top: 2.2rem;
      }
      h1 {
        font-size: 1.22rem;
      }
      .user-card, .blog-card {
        padding: 1.3rem 0.7rem 1.1rem;
      }
      .users-list, .blogs-list {
        grid-template-columns: 1fr;
        gap: 0.7rem;
      }
    }
  </style>
</head>
<body>
  <%- include('partials/header', { user }) %>
  <div class="main-container">
    <h1><i class="fas fa-search"></i> Search Results for "<%= query %>"</h1>
    <% if (success_msg) { %>
      <div class="alert alert-success"><i class="fas fa-check-circle"></i> <%= success_msg %></div>
    <% } %>
    <% if (error_msg) { %>
      <div class="alert alert-error"><i class="fas fa-exclamation-circle"></i> <%= error_msg %></div>
    <% } %>
    <div class="users-section">
      <h2 class="section-title"><i class="fas fa-users"></i> Users</h2>
      <div class="users-list">
        <% if (users.length === 0) { %>
          <div style="color:#b2becd;font-size:1.12rem;">No users found.</div>
        <% } %>
        <% users.forEach(userItem => { %>
          <div class="user-card">
            <div class="user-info">
              <img src="<%= userItem.profileImageURL %>" alt="Profile Image" class="user-img">
              <div class="user-details">
                <h3><a href="/profile/<%= userItem._id %>"><%= userItem.fullname %></a></h3>
                <p><%= userItem.email %></p>
              </div>
            </div>
            <div class="user-actions">
              <% if (!userItem.isOwn && currentUser) { %>
                <form action="<%= userItem.followStatus === 'following' ? '/user/unfollow/' : userItem.followStatus === 'requested' ? '/user/cancel-follow/' : '/user/follow/' %><%= userItem._id %>" method="POST" style="display:inline;">
                  <button class="follow-btn <%= userItem.followStatus === 'following' ? 'following' : userItem.followStatus === 'requested' ? 'requested cancel' : '' %>" type="submit">
                    <i class="fas <%= userItem.followStatus === 'following' ? 'fa-user-minus' : userItem.followStatus === 'requested' ? 'fa-user-times' : 'fa-user-plus' %>"></i>
                    <%= userItem.followStatus === 'following' ? 'Unfollow' : userItem.followStatus === 'requested' ? 'Cancel Request' : 'Follow' %>
                  </button>
                </form>
              <% } %>
            </div>
          </div>
        <% }) %>
      </div>
    </div>
    <div class="blogs-section">
      <h2 class="section-title"><i class="fas fa-blog"></i> Blogs</h2>
      <div class="blogs-list">
        <% if (blogs.length === 0) { %>
          <div style="color:#b2becd;font-size:1.12rem;">No blogs found.</div>
        <% } %>
        <% blogs.forEach(blog => { %>
          <div class="blog-card" data-blog-id="<%= blog._id %>">
            <% if (blog.coverImage) { %>
              <img src="<%= blog.coverImage %>" alt="Cover Image" class="blog-cover">
            <% } %>
            <div class="author-section">
              <img src="<%= blog.createdBy.profileImageURL %>" alt="Profile Image" class="author-img">
              <div class="author-details">
                <a href="/profile/<%= blog.createdBy._id %>"><%= blog.createdBy.fullname %></a>
                <span style="color:var(--text-secondary);font-size:0.95rem;">
                  <i class="fas fa-clock"></i> <%= moment(blog.createdAt).fromNow() %>
                </span>
              </div>
            </div>
            <div class="blog-title">
              <a href="/blog/<%= blog._id %>"><%= blog.title %></a>
            </div>
            <div class="blog-meta">
              <span class="likes-count"><i class="fas fa-heart"></i> <%= blog.likes.length %> Likes</span>
              <span class="comments-count"><i class="fas fa-comments"></i> <%= blog.totalComments %> Comments</span>
            </div>
            <div class="blog-excerpt">
              <%= blog.body.length > 220 ? blog.body.substring(0, 220) + "..." : blog.body %>
              <a href="/blog/<%= blog._id %>">Read more</a>
            </div>
            <div class="blog-actions">
              <% if (user) { %>
                <form action="/blog/<%= blog._id %>/like" method="POST" style="display:inline;">
                  <button class="action-btn <%= blog.likes.some(like => like._id.toString() === user._id.toString()) ? 'liked' : '' %>" type="submit">
                    <i class="fas <%= blog.likes.some(like => like._id.toString() === user._id.toString()) ? 'fa-heart' : 'fa-heart-broken' %>"></i>
                    <%= blog.likes.some(like => like._id.toString() === user._id.toString()) ? 'Unlike' : 'Like' %>
                  </button>
                </form>
                <% if (!blog.isOwn) { %>
                  <% if (blog.followStatus === 'requested') { %>
                    <form action="/user/cancel-follow/<%= blog.createdBy._id %>" method="POST" style="display:inline;">
                      <button class="follow-btn cancel" type="submit">
                        <i class="fas fa-user-times"></i> Cancel Request
                      </button>
                    </form>
                  <% } else { %>
                    <form action="<%= blog.followStatus === 'following' ? '/user/unfollow/' : '/user/follow/' %><%= blog.createdBy._id %>" method="POST" style="display:inline;">
                      <button class="follow-btn <%= blog.followStatus === 'following' ? 'following' : '' %>" type="submit">
                        <i class="fas <%= blog.followStatus === 'following' ? 'fa-user-minus' : 'fa-user-plus' %>"></i>
                        <%= blog.followStatus === 'following' ? 'Unfollow' : 'Follow' %>
                      </button>
                    </form>
                  <% } %>
                <% } %>
              <% } %>
              <div class="likes-preview" onclick="showLikes('<%= blog._id %>')">
                <i class="fa-light fa-heart"></i>
                <% if (blog.likes.length === 0) { %>
                  No likes yet
                <% } else { %>
                  Liked by
                  <% blog.likes.slice(0, 2).forEach((liker, index) => { %>
                    <% if (index > 0) { %>and<% } %>
                    <a href="/profile/<%= liker._id %>">
                      <img src="<%= liker.profileImageURL %>" alt="<%= liker.fullname %>" style="width: 20px; height: 20px; border-radius: 50%; vertical-align: middle;">
                      <%= liker.fullname %>
                    </a>
                  <% }) %>
                  <% if (blog.likes.length > 2) { %>
                    and <%= blog.likes.length - 2 %> others (<%= blog.likes.length %> total)
                  <% } %>
                <% } %>
              </div>
              <% let uniqueCommenters = []; let seen = new Set(); %>
              <% blog.comments.forEach(comment => { %>
                <% let id = comment.createdBy._id.toString(); %>
                <% if (!seen.has(id)) { seen.add(id); uniqueCommenters.push(comment.createdBy); } %>
                <% comment.replies.forEach(reply => { %>
                  <% let rid = reply.createdBy._id.toString(); %>
                  <% if (!seen.has(rid)) { seen.add(rid); uniqueCommenters.push(reply.createdBy); } %>
                <% }) %>
              <% }) %>
              <div class="comments-preview" onclick="showComments('<%= blog._id %>')">
                <i class="fas fa-comments"></i>
                <% if (uniqueCommenters.length === 0) { %>
                  No comments yet
                <% } else { %>
                  Commented by
                  <% uniqueCommenters.slice(0, 2).forEach((commenter, index) => { %>
                    <% if (index > 0) { %>and<% } %>
                    <a href="/profile/<%= commenter._id %>">
                      <img src="<%= commenter.profileImageURL %>" alt="<%= commenter.fullname %>" style="width: 20px; height: 20px; border-radius: 50%; vertical-align: middle;">
                      <%= commenter.fullname %>
                    </a>
                  <% }) %>
                  <% if (uniqueCommenters.length > 2) { %>
                    and <%= uniqueCommenters.length - 2 %> others
                  <% } %>
                  (<%= blog.totalComments %> comments)
                <% } %>
              </div>
              <a href="/blog/<%= blog._id %>" class="action-btn" style="background:var(--secondary-color);">
                <i class="fas fa-arrow-right"></i> Read Blog
              </a>
            </div>
            <div class="blog-menu">
              <button class="dots-btn" onclick="toggleMenu('<%= blog._id %>')">
                <i class="fas fa-ellipsis-v"></i>
              </button>
              <div class="dropdown-menu" id="menu-<%= blog._id %>">
                <% if (blog.isOwn) { %>
                  <form action="/blog/<%= blog._id %>?_method=DELETE" method="POST" style="margin:0;" onsubmit="return confirm('Are you sure you want to delete this blog?');">
                    <button type="submit" class="delete-btn"><i class="fas fa-trash"></i> Delete blog</button>
                  </form>
                <% } else { %>
                  <button onclick="openShare('<%= blog._id %>')"><i class="fas fa-share"></i> Share blog</button>
                <% } %>
              </div>
            </div>
            <div id="likesModal-<%= blog._id %>" class="modal">
              <button class="close-btn" onclick="hideLikes('<%= blog._id %>')">&times;</button>
              <h3><i class="fas fa-heart"></i> Likes</h3>
              <% if (blog.likes.length === 0) { %>
                <div style="color:#b2becd;font-size:1.06rem;">No likes yet.</div>
              <% } %>
              <% blog.likes.forEach(liker => { %>
                <div class="like-block">
                  <img src="<%= liker.profileImageURL %>" alt="Profile Image">
                  <div class="like-content">
                    <div class="like-author">
                      <a href="/profile/<%= liker._id %>"><%= liker.fullname %></a>
                    </div>
                    <% if (user && liker._id.toString() !== user._id.toString()) { %>
                      <% if (liker.followStatus === 'requested') { %>
                        <form action="/user/cancel-follow/<%= liker._id %>" method="POST" style="display:inline;">
                          <button class="follow-btn cancel ajax-follow-btn" type="button" data-user-id="<%= liker._id %>" data-follow-status="requested">
                            <i class="fas fa-user-times"></i> Cancel Request
                          </button>
                        </form>
                      <% } else { %>
                        <form action="<%= liker.followStatus === 'following' ? '/user/unfollow/' : '/user/follow/' %><%= liker._id %>" method="POST" style="display:inline;">
                          <button class="follow-btn <%= liker.followStatus === 'following' ? 'following' : '' %> ajax-follow-btn" type="button" data-user-id="<%= liker._id %>" data-follow-status="<%= liker.followStatus %>">
                            <i class="fas <%= liker.followStatus === 'following' ? 'fa-user-minus' : 'fa-user-plus' %>"></i>
                            <%= liker.followStatus === 'following' ? 'Unfollow' : 'Follow' %>
                          </button>
                        </form>
                      <% } %>
                    <% } %>
                  </div>
                </div>
              <% }) %>
            </div>
            <div id="commentsModal-<%= blog._id %>" class="modal">
              <button class="close-btn" onclick="hideComments('<%= blog._id %>')">&times;</button>
              <h3><i class="fas fa-comments"></i> Comments</h3>
              <div class="comments-list">
              <% if (blog.comments.length === 0) { %>
                <div style="color:#b2becd;font-size:1.06rem;">No comments yet.</div>
              <% } %>
              <% blog.comments.forEach(comment => { %>
                <div class="comment-block" data-comment-id="<%= comment._id %>">
                  <img src="<%= comment.createdBy.profileImageURL %>" alt="Profile Image">
                  <div class="comment-content">
                    <div class="comment-author"><a href="/profile/<%= comment.createdBy._id %>" style="color:var(--primary-color);text-decoration:none;"><%= comment.createdBy.fullname %></a></div>
                    <div class="comment-text"><%= comment.content %></div>
                    <div class="comment-time"><i class="fas fa-clock"></i> <%= moment(comment.createdAt).fromNow() %></div>
                    <div class="comment-actions">
                      <% if (user) { %>
                        <button class="comment-action-btn like-comment-btn <%= comment.likes.some(l => l._id.toString() === user._id.toString()) ? 'liked' : '' %>" data-comment-id="<%= comment._id %>">
                          <i class="fas fa-heart"></i>
                          <span class="like-count"><%= comment.likes.length %></span>
                        </button>
                        <button class="comment-action-btn reply-btn" data-comment-id="<%= comment._id %>">
                          <i class="fas fa-reply"></i> Reply
                        </button>
                      <% } %>
                      <span class="reply-count"><i class="fas fa-reply-all"></i> <%= comment.replies ? comment.replies.length : 0 %></span>
                    </div>
                    <div class="comment-replies">
                      <% if (comment.replies && comment.replies.length > 0) { %>
                        <% comment.replies.forEach(reply => { %>
                          <div class="comment-block" data-comment-id="<%= reply._id %>">
                            <img src="<%= reply.createdBy.profileImageURL %>" alt="Profile Image">
                            <div class="comment-content">
                              <div class="comment-author"><a href="/profile/<%= reply.createdBy._id %>" style="color:var(--primary-color);text-decoration:none;"><%= reply.createdBy.fullname %></a></div>
                              <div class="comment-text"><%= reply.content %></div>
                              <div class="comment-time"><i class="fas fa-clock"></i> <%= moment(reply.createdAt).fromNow() %></div>
                              <div class="comment-actions">
                                <% if (user) { %>
                                  <button class="comment-action-btn like-comment-btn <%= reply.likes.some(l => l._id.toString() === user._id.toString()) ? 'liked' : '' %>" data-comment-id="<%= reply._id %>">
                                    <i class="fas fa-heart"></i>
                                    <span class="like-count"><%= reply.likes.length %></span>
                                  </button>
                                <% } %>
                              </div>
                            </div>
                            <div class="comment-menu">
                              <button class="dots-btn" onclick="toggleCommentMenu('<%= reply._id %>')">
                                <i class="fas fa-ellipsis-v"></i>
                              </button>
                              <div class="dropdown-menu" id="comment-menu-<%= reply._id %>">
                                <% if (user && reply.createdBy._id.toString() === user._id.toString()) { %>
                                  <button class="delete-btn delete-comment-btn" data-comment-id="<%= reply._id %>"><i class="fas fa-trash"></i> Delete</button>
                                <% } %>
                              </div>
                            </div>
                          </div>
                        <% }) %>
                      <% } %>
                    </div>
                    <div class="reply-form-container"></div>
                  </div>
                  <div class="comment-menu">
                    <button class="dots-btn" onclick="toggleCommentMenu('<%= comment._id %>')">
                      <i class="fas fa-ellipsis-v"></i>
                    </button>
                    <div class="dropdown-menu" id="comment-menu-<%= comment._id %>">
                      <% if (user && comment.createdBy._id.toString() === user._id.toString()) { %>
                        <button class="delete-btn delete-comment-btn" data-comment-id="<%= comment._id %>"><i class="fas fa-trash"></i> Delete</button>
                      <% } %>
                    </div>
                  </div>
                </div>
              <% }) %>
              </div>
              <% if (user) { %>
                <form action="/comment/<%= blog._id %>" method="POST" class="post-comment-form">
                  <textarea name="content" required placeholder="Write a comment…" rows="3"
                            style="width:100%; padding:.6rem; border-radius:4px; background:#2c3e50; color:#ecf0f1; border:1px solid #34495e;"></textarea>
                  <button type="submit" style="margin-top:.5rem; padding:.5rem 1rem; background:#3498db; border:none; border-radius:4px; color:#fff; cursor:pointer;">
                    Post Comment
                  </button>
                </form>
              <% } %>
            </div>
          </div>
        <% }) %>
      </div>
    </div>
  </div>
  <div id="shareModal">
    <button class="close-btn" onclick="closeShare()">&times;</button>
    <h3>Share Blog</h3>
    <div class="share-options">
      <button class="share-btn" id="share-facebook"><i class="fab fa-facebook"></i> Facebook</button>
      <button class="share-btn" id="share-whatsapp"><i class="fab fa-whatsapp"></i> WhatsApp</button>
      <button class="share-btn" id="copy-link"><i class="fas fa-copy"></i> Copy Link</button>
    </div>
  </div>

  <script>
    // Similar script as home.ejs for modals, follow buttons, comments, etc.
    let currentBlogId = null;

    function toggleMenu(id) {
      const menu = document.getElementById(`menu-${id}`);
      if (menu) {
        menu.classList.toggle('active');
      }
    }

    function toggleCommentMenu(id) {
      const menu = document.getElementById(`comment-menu-${id}`);
      if (menu) {
        menu.classList.toggle('active');
      }
    }

    function openShare(id) {
      currentBlogId = id;
      document.getElementById('shareModal').style.display = 'block';
      const link = `${window.location.origin}/blog/${id}`;
      document.getElementById('share-facebook').onclick = () => window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(link)}`, '_blank');
      document.getElementById('share-whatsapp').onclick = () => window.open(`https://api.whatsapp.com/send?text=${encodeURIComponent(link)}`, '_blank');
      document.getElementById('copy-link').onclick = () => {
        navigator.clipboard.writeText(link);
        alert('Link copied!');
      };
    }

    function closeShare() {
      document.getElementById('shareModal').style.display = 'none';
    }

    function showLikes(id) {
      const commentsModal = document.getElementById('commentsModal-' + id);
      if (commentsModal && commentsModal.classList.contains('active')) {
        hideComments(id);
      }
      let modal = document.getElementById('likesModal-' + id);
      modal.style.display = 'block';
      setTimeout(() => {
        modal.classList.add('active');
      }, 8);
    }

    function hideLikes(id) {
      let modal = document.getElementById('likesModal-' + id);
      modal.classList.remove('active');
      setTimeout(() => {
        modal.style.display = 'none';
      }, 400);
    }
    
    function showComments(id) {
      const likesModal = document.getElementById('likesModal-' + id);
      if (likesModal && likesModal.classList.contains('active')) {
        hideLikes(id);
      }
      let modal = document.getElementById('commentsModal-' + id);
      modal.style.display = 'block';
      setTimeout(() => {
        modal.classList.add('active');
      }, 8);
    }

    function hideComments(id) {
      let modal = document.getElementById('commentsModal-' + id);
      modal.classList.remove('active');
      setTimeout(() => {
        modal.style.display = 'none';
      }, 400);
    }

    document.addEventListener('click', (e) => {
      if (!e.target.closest('.blog-menu') && !e.target.closest('.comment-menu')) {
        document.querySelectorAll('.dropdown-menu').forEach(menu => menu.classList.remove('active'));
      }
      if (e.target === document.getElementById('shareModal')) {
        closeShare();
      }
    });

    window.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        document.querySelectorAll('.dropdown-menu').forEach(menu => menu.classList.remove('active'));
        closeShare();
      }
    });

    // Generic handler for AJAX forms (for comments, etc.)
    const handleFormSubmit = async (e, successCallback) => {
      e.preventDefault();
      const form = e.target;
      try {
        const formData = new FormData(form);
        const response = await fetch(form.action, {
          method: 'POST',
          body: new URLSearchParams(formData),
          headers: { 
            'X-Requested-With': 'XMLHttpRequest',
            'Content-Type': 'application/x-www-form-urlencoded'
          }
        });
        if (response.ok) {
          const data = await response.json();
          successCallback(data, form);
        } else {
          alert('Action failed. Please try again.');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('An error occurred. Please try again.');
      }
    };

    // Follow/Unfollow for users and blog authors
    document.querySelectorAll('.follow-btn').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        e.preventDefault(); // Since it's button in form, but to handle as AJAX
        const form = btn.closest('form');
        if (form) {
          try {
            const response = await fetch(form.action, {
              method: 'POST',
              headers: { 
                'X-Requested-With': 'XMLHttpRequest',
                'Content-Type': 'application/json' 
              },
            });
            if (response.ok) {
              const data = await response.json();
              const finalStatus = data.newStatus || btn.dataset.followStatus; // If server returns newStatus
              btn.dataset.followStatus = finalStatus;
              btn.classList.remove('following', 'requested', 'cancel');
              const btnIcon = btn.querySelector('i');
              if (finalStatus === 'following') {
                btn.innerHTML = '<i class="fas fa-user-minus"></i> Unfollow';
                btn.classList.add('following');
              } else if (finalStatus === 'requested') {
                btn.innerHTML = '<i class="fas fa-user-times"></i> Cancel Request';
                btn.classList.add('requested', 'cancel');
              } else {
                btn.innerHTML = '<i class="fas fa-user-plus"></i> Follow';
              }
            } else {
              alert('Action failed. Please try again.');
            }
          } catch (error) {
            console.error('Error:', error);
            alert('An error occurred. Please try again.');
          }
        }
      });
    });

    // Add similar logic for comments, likes, deletes as in home.ejs if needed
    // ... (copy the comment handling scripts from home.ejs here if comments are interactive in search, but since search shows previews, perhaps not necessary)
  </script>
</body>
</html>
